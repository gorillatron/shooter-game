;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name shooter.game.level, :imports nil, :requires nil, :uses nil, :defs {Map {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name shooter.game.level/Map, :file "src\\shooter\\game\\level.cljs", :end-column 15, :type true, :column 12, :internal-ctor true, :line 4, :record true, :end-line 4, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Map {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\shooter\\src\\shooter\\game\\level.cljs", :line 4, :column 12, :end-line 4, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([blocksize matrix]))}, :name shooter.game.level/->Map, :variadic false, :file "src\\shooter\\game\\level.cljs", :end-column 15, :method-params ([blocksize matrix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([blocksize matrix]))}, map->Map {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\shooter\\src\\shooter\\game\\level.cljs", :line 4, :column 12, :end-line 4, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__26279]))}, :name shooter.game.level/map->Map, :variadic false, :file "src\\shooter\\game\\level.cljs", :end-column 15, :method-params ([G__26279]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__26279]))}, map-size {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\shooter\\src\\shooter\\game\\level.cljs", :line 7, :column 7, :end-line 7, :end-column 15, :arglists (quote ([map]))}, :name shooter.game.level/map-size, :variadic false, :file "src\\shooter\\game\\level.cljs", :end-column 15, :method-params ([map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([map]))}, block-of-type {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\shooter\\src\\shooter\\game\\level.cljs", :line 15, :column 7, :end-line 15, :end-column 20, :arglists (quote ([type map]))}, :name shooter.game.level/block-of-type, :variadic false, :file "src\\shooter\\game\\level.cljs", :end-column 20, :method-params ([type map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type map]))}, walls {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\shooter\\src\\shooter\\game\\level.cljs", :line 28, :column 7, :end-line 28, :end-column 12, :arglists (quote ([map]))}, :name shooter.game.level/walls, :variadic false, :file "src\\shooter\\game\\level.cljs", :end-column 12, :method-params ([map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([map]))}, construct-map {:protocol-inline nil, :meta {:file "C:\\cygwin64\\progg\\shooter\\src\\shooter\\game\\level.cljs", :line 33, :column 7, :end-line 33, :end-column 20, :arglists (quote ([blocksize matrix]))}, :name shooter.game.level/construct-map, :variadic false, :file "src\\shooter\\game\\level.cljs", :end-column 20, :method-params ([blocksize matrix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([blocksize matrix]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :w :type :size :matrix :blocksize matrix blocksize :x}, :order [:blocksize :matrix blocksize matrix :type :x :y :w :size]}, :doc nil}